[
  {
    "Name": "RS file format",
    "Title": "Формат файлов .rs для GLSL",
    "Description": "Файлы формата .rs используются в #include \"относительный путь к файлу\" директивах GLSL кода. Генерация C# кода GLSL файла, содержащего #include \"*.rs\" файл, приведет к генерации Компонента, Системы, а также C# модели пользовательских структур и uniform блоков с правильным выравниванием. Данные файлы играют ключевую роль в связывании GLSL шейдеров с C# кодом в рамках ECS архитектуры.",
    "Author": "AtomEngine Team",
    "Section": "GLSL",
    "SubSection": "RS"
  },
  {
    "Name": "[ATTRIBUTE]",
    "Title": "Атрибуты в .rs файлах",
    "Description": "Атрибуты, используемые в .rs файлах, имеют вид [Attribute:Value]. Они предоставляют дополнительную метаинформацию для генератора кода, который трансформирует GLSL код в C# представление. Атрибуты могут применяться к файлу целиком, к uniform блокам, к отдельным переменным и к пользовательским структурам. Правильное использование атрибутов позволяет точно настроить генерацию C# моделей и оптимизировать производительность.",
    "Author": "AtomEngine Team",
    "Section": "GLSL",
    "SubSection": "RS/Attributes"
  },
  {
    "Name": "[InterfaceName:Value]",
    "Title": "Атрибут InterfaceName",
    "Description": "Атрибут [InterfaceName:Value] применяется к .rs файлу и указывает имя интерфейса, который будет сгенерирован на основе этого файла. Например, [InterfaceName:IViewRender] приведет к созданию интерфейса с именем IViewRender. Этот интерфейс будет содержать методы для управления данными, определенными в .rs файле.",
    "Author": "AtomEngine Team",
    "Section": "GLSL",
    "SubSection": "RS/Attributes"
  },
  {
    "Name": "[ComponentName:Value]",
    "Title": "Атрибут ComponentName",
    "Description": "Атрибут [ComponentName:Value] применяется к .rs файлу и указывает имя компонента, который будет сгенерирован на основе этого файла. Например, [ComponentName:ViewComponent] приведет к созданию компонента с именем ViewComponent. Этот компонент будет содержать данные, соответствующие uniform переменным и блокам, определенным в .rs файле.",
    "Author": "AtomEngine Team",
    "Section": "GLSL",
    "SubSection": "RS/Attributes"
  },
  {
    "Name": "[SystemName:Value]",
    "Title": "Атрибут SystemName",
    "Description": "Атрибут [SystemName:Value] применяется к .rs файлу и указывает имя системы, которая будет сгенерирована на основе этого файла. Например, [SystemName:ViewRenderSystem] приведет к созданию системы с именем ViewRenderSystem. Эта система будет содержать логику для обновления шейдерных данных и взаимодействия с компонентами.",
    "Author": "AtomEngine Team",
    "Section": "GLSL",
    "SubSection": "RS/Attributes"
  },
  {
    "Name": "[RequiredComponent:Value]",
    "Title": "Атрибут RequiredComponent",
    "Description": "Атрибут [RequiredComponent:Value] применяется к .rs файлу и указывает дополнительные компоненты, которые требуются системе для работы. Например, [RequiredComponent:MeshComponent] укажет генератору, что в Query запросах сгенерированной системы должен использоваться MeshComponent. Этот атрибут может использоваться несколько раз для добавления нескольких зависимых компонентов. Обеспечивает правильную работу ECS системы путем гарантии наличия всех необходимых компонентов.",
    "Author": "AtomEngine Team",
    "Section": "GLSL",
    "SubSection": "RS/Attributes"
  },
  {
    "Name": "[IsDirty:Value]",
    "Title": "Атрибут IsDirty",
    "Description": "Атрибут [IsDirty:Value] применяется к uniform переменным или блокам в .rs файле. Он указывает генератору, что у соответствующего поля в C# компоненте должен использоваться флаг IsDirty. В сгенерированных системах при установке значений будет проверяться этот флаг для определения необходимости обновления данных в шейдере. Этот атрибут используется для оптимизации производительности путем избегания ненужных обновлений шейдерных данных.",
    "Author": "AtomEngine Team",
    "Section": "GLSL",
    "SubSection": "RS/Attributes"
  },
  {
    "Name": "[StructType:Value]",
    "Title": "Атрибут StructType",
    "Description": "Атрибут [StructType:Value] применяется к пользовательским структурам в .rs файле. Он указывает генератору, какой тип должен использоваться при генерации C# представления этой структуры. Например, [StructType:LightData] приведет к тому, что сгенерированный класс будет иметь имя LightData. Это важно для создания понятного и типобезопасного API при работе со структурами данных шейдеров.",
    "Author": "AtomEngine Team",
    "Section": "GLSL",
    "SubSection": "RS/Attributes"
  },
  {
    "Name": "[PlaceTarget:Value]",
    "Title": "Атрибут MethdoTarget",
    "Description": "Атрибут [PlaceTarget:Value] применяется к uniform-переменным, uniform-блокам, структурам и методам в .rs файле. Он указывает генератору расположение объекта в шейдере. Возможные значение [PlaceTarget:Vertex], [PlaceTarget:Fragment], [PlaceTarget:Both]",
    "Author": "AtomEngine Team",
    "Section": "GLSL",
    "SubSection": "RS/Attributes"
  },
  {
    "Name": ".RS",
    "Title": "Рабочий процесс интеграции GLSL и .rs файлов",
    "Description": "Описание полного процесса работы с .rs файлами: от их создания и аннотирования атрибутами до включения в GLSL шейдеры и последующей генерации C# кода. Включает в себя лучшие практики организации файлов, рекомендации по именованию и типичные сценарии использования в проектах рендеринга. Данный документ помогает разработчикам эффективно интегрировать GLSL шейдеры с C# кодом в ECS архитектуре.",
    "Author": "AtomEngine Team",
    "Section": "GLSL",
    "SubSection": "RS"
  }
]